#!/usr/bin/env python3

"""
    cuetoolkit
    ~~~~~~~~~~

    A bunch of tools for reading cuesheet files, splitting CDDA images
    and filling tracks metadata.

    :copyright: (c) 2019 by AndreyVM
    :license: GNU GPLv3
"""


import argparse

from cuetoolkit import version
from cuetoolkit.common import CDDAPoints, NotCDDAPoints
from cuetoolkit.exc import show_error


def parse_args():
    args = argparse.ArgumentParser()
    args.add_argument(
        '-v', '--version', action='version', version='cuetoolkit-' + version)
    args.add_argument(
        '-g',
        action='store',
        dest='gaps',
        default='append',
        choices=('append', 'prepend', 'split'),
        help='control pre-gaps, append, prepend or split them')
    args.add_argument(
        '-n',
        action='store_true',
        dest='not_cdda',
        default=False,
        help='image type, CDDA or not, -n means not CDDA')
    args.add_argument(
        'cue_file',
        action='store',
        help='the cuesheet file name')
    return args.parse_args()


def main():
    args = parse_args()
    if not args.not_cdda:
        points = CDDAPoints()
    else:
        points = NotCDDAPoints()
    points.extract(args.cue_file)
    for point in points.sift_points(args.gaps):
        print(point)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        show_error(e)
